- name: "Install"
  become: true
  ansible.builtin.package:
    name: mc
    state: present

- name: "Calculate paths"
  ansible.builtin.set_fact:
    conf_path: "{{ (xdg_config_home, 'mc') | path_join }}"
    ini_default: "{{ (role_path, 'files', 'ini.default') | path_join }}"
    ini_src: "{{ (role_path, 'files', 'ini') | path_join }}"
    ini_dest: "{{ (xdg_config_home, 'mc', 'ini') | path_join }}"


- name: "Create temp file"
  register: ini_temp
  changed_when: false
  ansible.builtin.tempfile:
    state: file
    suffix: mcini

- name: "Copy ini defaults"
  changed_when: false
  ansible.builtin.copy:
    src: "{{ ini_default }}"
    dest: "{{ ini_temp.path }}"
    mode: '0644'

- name: "Apply ini overrides"
  changed_when: false
  loop:
    - {key: 'use_internal_edit', value: 'false'}
    - {key: 'skin', value: 'modarin256'}
  ansible.builtin.replace:
    path: "{{ ini_temp.path }}"
    regexp: '^({{ item.key }})=(.+)$'
    replace: '\1={{ item.value }}'

- name: "Update generated ini"
  when: inventory_hostname == "localhost"
  ansible.builtin.copy:
    src: "{{ ini_temp.path }}"
    dest: "{{ ini_src }}"
    mode: '0644'

- name: "Create config path"
  ansible.builtin.file:
    path: "{{ conf_path }}"
    state: directory
    mode: '0755'

- name: "Link ini"
  when: inventory_hostname == "localhost"
  ansible.builtin.file:
    src: "{{ ini_src }}"
    dest: "{{ ini_dest }}"
    state: link

- name: "Copy ini"
  when: inventory_hostname != "localhost"
  ansible.builtin.copy:
    src: "{{ ini_src }}"
    dest: "{{ ini_dest }}"
    mode: '0644'
