#!/usr/bin/env zsh

# If ZDOTDIR is undefined, assume plugins etc are in ~/.zsh
ZSH_DATA="${ZDOTDIR:-$HOME/.zsh}"

# use common posix rc files
if [ -e "${HOME}/.profile" ]; then
	. "${HOME}/.profile"
fi

function _source(){
    if [ -f "$1" ]; then
        source "$1"; return 0
    else
        return 1
    fi
}


#setopt correct                              # Auto correct mistakes
setopt extendedglob                         # Extended globbing. Allows using regular expressions with *
setopt nocaseglob                           # Case insensitive globbing
setopt rcexpandparam                        # Array expension with parameters
setopt nocheckjobs                          # Don't warn about running processes when exiting
setopt numericglobsort                      # Sort filenames numerically when it makes sense
setopt nobeep                               # No beep
setopt appendhistory                        # Immediately append history instead of overwriting
setopt histignorealldups                    # If a new command is a duplicate, remove the older one
#setopt autocd                               # if only directory path is entered, cd there.
setopt interactive_comments                 #
setopt nomatch                              # Print 'no match' message when glob matches nothing
setopt prompt_subst                         # Enable substitution in prompt

setopt noautomenu                           # Only show completion when TAB is pressed
setopt nomenucomplete                       # Don't autofill suggestions when TAB is pressed
setopt HIST_IGNORE_SPACE                    # Don't append history if command starts with a space
setopt SH_NULLCMD                           # Do not use the values of NULLCMD and READNULLCMD when doing redirections, use ‘:’ instead

export LS_COLORS=$LS_COLORS:'ow=1;34:'


zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}'  # match uppercase during tab complete
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"             # Colored completion (different colors for dirs/files/etc)
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' rehash true                                  # automatically find new executables in path

# Need to double check what these do
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' preserve-prefix '//[^/]##/'

# Speed up completions
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Set to false to show completion on an empty line, or true to insert a literal tab
zstyle ':completion:*' insert-tab true


# Configure History
HISTFILE="${XDG_STATE_HOME}/zhistory"
HISTSIZE=1000
SAVEHIST=1000

bindkey -v
bindkey '^R' history-incremental-pattern-search-backward


PROMPT="%B%F{green}%n%f@%F{202}%m%f %{$fg[cyan]%}%(4~|%-1~/.../%2~|%~)%u%b >%{$fg[cyan]%}>%B%(?.%{$fg[cyan]%}.%{$fg[red]%})>%{$reset_color%}%b " # Print some system information when the shell is first started


# Key Bindings
# -----------------------------------------------------------------------------

# Shift-Tab to reverse through completion menu
bindkey '^[[Z' reverse-menu-complete

# Key bindings taken from Manjaro default
bindkey -e
bindkey '^[[7~' beginning-of-line                               # Home key
bindkey '^[[H' beginning-of-line                                # Home key
if [[ "${terminfo[khome]}" != "" ]]; then
  bindkey "${terminfo[khome]}" beginning-of-line                # [Home] - Go to beginning of line
fi
bindkey '^[[8~' end-of-line                                     # End key
bindkey '^[[F' end-of-line                                     # End key
if [[ "${terminfo[kend]}" != "" ]]; then
  bindkey "${terminfo[kend]}" end-of-line                       # [End] - Go to end of line
fi
bindkey '^[[2~' overwrite-mode                                  # Insert key
bindkey '^[[3~' delete-char                                     # Delete key
bindkey '^[[C'  forward-char                                    # Right key
bindkey '^[[D'  backward-char                                   # Left key
bindkey '^[[5~' history-beginning-search-backward               # Page up key
bindkey '^[[6~' history-beginning-search-forward                # Page down key

# Navigate words with ctrl+arrow keys
bindkey '^[Oc' forward-word                                     #
bindkey '^[Od' backward-word                                    #
bindkey '^[[1;5D' backward-word                                 #
bindkey '^[[1;5C' forward-word                                  #
bindkey '^H' backward-kill-word                                 # delete previous word with ctrl+backspace


# PATH
# -----------------------------------------------------------------------------

# Enforce unique values in PATH
typeset -Ux path
fpath+=("${ZSH_DATA}/zfunc")


# Start SSH Agent
# -----------------------------------------------------------------------------
if [ ! -d "${HOME}/.ssh" ]; then mkdir "${HOME}/.ssh"; fi
if [ ! -S "$HOME/.ssh/ssh_auth_sock" ]; then
	eval "$(ssh-agent)"
	ln -sf "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh_auth_sock"
fi
export SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock"


# Shell tools
# -----------------------------------------------------------------------------
autoload -U compinit && compinit -u


# Starship prompt
if command -v starship >/dev/null 2>&1 ; then
    eval "$(starship init zsh)"
fi

# fzf - Debian
_source /usr/share/doc/fzf/examples/completion.zsh
_source /usr/share/doc/fzf/examples/key-bindings.zsh

# fzf - Arch
_source /usr/share/fzf/completion.zsh
_source /usr/share/fzf/key-bindings.zsh

# fzf - Use silver searcher
if type ag >/dev/null 2>&1 ; then
    export FZF_DEFAULT_COMMAND='ag --hidden'
fi

# fzf-tab
_source "${ZSH_DATA}/plugins/fzf-tab/fzf-tab.plugin.zsh"

# Try load z.lua
if [ -f "$HOME/.local/bin/z.lua" ]; then
    xdg_state="${XDG_STATE_HOME:=$HOME/.local/state}"
    if [ ! -f "${xdg_state}" ]; then mkdir -p "${xdg_state}"; fi
    export _ZL_DATA="${xdg_state}/zlua"
    eval "$(lua "$HOME/.local/bin/z.lua" --init zsh)"
    alias j=z
# Try load autojump
else
    # autojump - Debian
    _source /usr/share/autojump/autojump.zsh
    # autojump - Manual
    _source /usr/local/share/autojump/autojump.zsh
fi


# Enable bash completion
autoload -U +X bashcompinit && bashcompinit
if [ -f "$HOME/.bash_completion" ]; then source "$HOME/.bash_completion"; fi
if [ -f "$XDG_CONFIG_HOME/bash_completion" ]; then source "$XDG_CONFIG_HOME/bash_completion"; fi

# systemctl changed output. Remove once `sc enable ...` completion works
# https://github.com/ohmyzsh/ohmyzsh/issues/8751
_systemctl_unit_state() {
  typeset -gA _sys_unit_state
  _sys_unit_state=( $(__systemctl list-unit-files "$PREFIX*" | awk '{print $1, $2}') )
}

# direnv
if command -v direnv >/dev/null; then
    eval "$(direnv hook zsh)"
fi

# thefuck
if command -v thefuck >/dev/null; then
    eval "$(thefuck --alias)"
fi

# asdf version manager
if [ -f "$HOME/.asdf/asdf.sh" ]; then
    source "$HOME/.asdf/asdf.sh"
elif [ -f "${XDG_DATA_DIR:=$HOME/.local/share}/asdf/asdf.sh" ]; then
    source "${XDG_DATA_DIR:=$HOME/.local/share}/asdf/asdf.sh"
elif [ -f /opt/asdf-vm/asdf.sh ]; then
    # AUR
    source /opt/asdf-vm/asdf.sh
fi

# Disable XON
stty -ixon

cat "${ZDOTDIR:-${HOME}/.zsh}/meow.txt"

#if command_exists tte; then
#    case $(($RANDOM % 2)) in
#        0)  /scripts/kittysay.py | tte slide --movement-speed 1 --final-gradient-steps 10 --final-gradient-frames 1 ;;
#        1)  /scripts/kittysay.py | tte scattered --movement-speed 1 --final-gradient-steps 10 --final-gradient-frames 1 ;;
#    esac
#
#else
#    /scripts/kittysay.py
#fi
